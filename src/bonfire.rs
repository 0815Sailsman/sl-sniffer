use crate::bonfire::Bonfire::{AnorLondo, AnorLondoChamberOfThePrincess, AnorLondoDarkmoonTomb, AnorLondoResidence, AshLake, AshLakeDragon, BlighttownCatwalk, BlighttownSwamp, Catacombs1, Catacombs2, ChasmOfTheAbyss, CrystalCave, DarkrootBasin, DarkrootGarden, DaughterOfChaos, DemonRuinsCatacombs, DemonRuinsEntrance, DemonRuinsStaircase, Depths, DukesArchives1, DukesArchives2, DukesArchives3, FirelinkAltarLordvessel, FirelinkShrine, LostIzalith2, LostIzalithHeartOfChaos, LostIzalithLavaPits, OolacileSanctuary, OolacileSanctuaryGarden, OolacileTownship, OolacileTownshipDungeon, PaintedWorldOfAriamis, SensFortress, TheAbyss, TheGreatHollow, TombOfTheGiants2, TombOfTheGiantsAltarOfTheGravelord, TombOfTheGiantsPatches, UndeadAsylumCourtyard, UndeadAsylumInterior, UndeadBurg, UndeadBurgSunlightAltar, UndeadParishAndre};
use crate::remastered::DarkSoulsRemastered;

#[derive(Eq, PartialEq, Clone, Debug)]
pub enum Bonfire {
    UndeadAsylumCourtyard = 1811960,
    UndeadAsylumInterior = 1811961,
    FirelinkShrine = 1021960,
    FirelinkAltarLordvessel = 1801960,
    UndeadBurg = 1011962,
    UndeadBurgSunlightAltar = 1011961,
    UndeadParishAndre = 1011964,
    DarkrootGarden = 1201961,
    DarkrootBasin = 1601961,
    Depths = 1001960,
    BlighttownCatwalk = 1401962,
    BlighttownSwamp = 1401961,
    DaughterOfChaos = 1401960,
    TheGreatHollow = 1321962,
    AshLake = 1321961,
    AshLakeDragon = 1321960,
    DemonRuinsEntrance = 1411961,
    DemonRuinsStaircase = 1411962,
    DemonRuinsCatacombs = 1411963,
    LostIzalithLavaPits = 1411964,
    LostIzalith2 = 1411960,
    LostIzalithHeartOfChaos = 1411950,
    SensFortress = 1501961,
    AnorLondo = 1511960,
    AnorLondoDarkmoonTomb = 1511962,
    AnorLondoResidence = 1511961,
    AnorLondoChamberOfThePrincess = 1511950,
    PaintedWorldOfAriamis = 1101960,
    DukesArchives1 = 1701962,
    DukesArchives2 = 1701961,
    DukesArchives3 = 1701960,
    CrystalCave = 1701950,
    Catacombs1 = 1301960,
    Catacombs2 = 1301961,
    TombOfTheGiantsPatches = 1311961,
    TombOfTheGiants2 = 1311960,
    TombOfTheGiantsAltarOfTheGravelord = 1311950,
    TheAbyss = 1601950,
    OolacileSanctuaryGarden = 1211963,
    OolacileSanctuary = 1211961,
    OolacileTownship = 1211962,
    OolacileTownshipDungeon = 1211964,
    ChasmOfTheAbyss = 1211950,
}

pub struct AllBonfireStates {
    undead_asylum_courtyard:BonfireState,
    undead_asylum_interior:BonfireState,
    firelink_shrine:BonfireState,
    firelink_altar_lordvessel:BonfireState,
    undead_burg:BonfireState,
    undead_burg_sunlight_altar:BonfireState,
    undead_parish_andre:BonfireState,
    darkroot_garden:BonfireState,
    darkroot_basin:BonfireState,
    depths:BonfireState,
    blighttown_catwalk:BonfireState,
    blighttown_swamp:BonfireState,
    daughter_of_chaos:BonfireState,
    the_great_hollow:BonfireState,
    ash_lake:BonfireState,
    ash_lake_dragon:BonfireState,
    demon_ruins_entrance:BonfireState,
    demon_ruins_staircase:BonfireState,
    demon_ruins_catacombs:BonfireState,
    lost_izalith_lava_pits:BonfireState,
    lost_izalith2:BonfireState,
    lost_izalith_heart_of_chaos:BonfireState,
    sens_fortress:BonfireState,
    anor_londo:BonfireState,
    anor_londo_darkmoon_tomb:BonfireState,
    anor_londo_residence:BonfireState,
    anor_londo_chamber_of_the_princess:BonfireState,
    painted_world_of_ariamis:BonfireState,
    dukes_archives1:BonfireState,
    dukes_archives2:BonfireState,
    dukes_archives3:BonfireState,
    crystal_cave:BonfireState,
    catacombs1:BonfireState,
    catacombs2:BonfireState,
    tomb_of_the_giants_patches:BonfireState,
    tomb_of_the_giants2:BonfireState,
    tomb_of_the_giants_altar_of_the_gravelord:BonfireState,
    the_abyss:BonfireState,
    oolacile_sanctuary_garden:BonfireState,
    oolacile_sanctuary:BonfireState,
    oolacile_township:BonfireState,
    oolacile_township_dungeon:BonfireState,
    chasm_of_the_abyss:BonfireState
}

#[derive(Debug)]
pub enum BonfireState {
    Unknown = -1,
    Discovered = 0,
    Unlocked = 10,
    Kindled1 = 20,
    Kindled2 = 30,
    Kindled3 = 40,
}

impl BonfireState {
    pub fn from_value(value: i32) -> BonfireState {
        match value {
            0 => BonfireState::Discovered,
            10 => BonfireState::Unlocked,
            20 => BonfireState::Kindled1,
            30 => BonfireState::Kindled2,
            40 => BonfireState::Kindled3,
            _ => BonfireState::Unknown
        }
    }
}

impl AllBonfireStates {
    pub fn from(remastered: &DarkSoulsRemastered) -> Self {
        return Self {
            undead_asylum_courtyard: remastered.get_bonfire_state(UndeadAsylumCourtyard),
            undead_asylum_interior: remastered.get_bonfire_state(UndeadAsylumInterior),
            firelink_shrine: remastered.get_bonfire_state(FirelinkShrine),
            firelink_altar_lordvessel: remastered.get_bonfire_state(FirelinkAltarLordvessel),
            undead_burg: remastered.get_bonfire_state(UndeadBurg),
            undead_burg_sunlight_altar: remastered.get_bonfire_state(UndeadBurgSunlightAltar),
            undead_parish_andre: remastered.get_bonfire_state(UndeadParishAndre),
            darkroot_garden: remastered.get_bonfire_state(DarkrootGarden),
            darkroot_basin: remastered.get_bonfire_state(DarkrootBasin),
            depths: remastered.get_bonfire_state(Depths),
            blighttown_catwalk: remastered.get_bonfire_state(BlighttownCatwalk),
            blighttown_swamp: remastered.get_bonfire_state(BlighttownSwamp),
            daughter_of_chaos: remastered.get_bonfire_state(DaughterOfChaos),
            the_great_hollow: remastered.get_bonfire_state(TheGreatHollow),
            ash_lake: remastered.get_bonfire_state(AshLake),
            ash_lake_dragon: remastered.get_bonfire_state(AshLakeDragon),
            demon_ruins_entrance: remastered.get_bonfire_state(DemonRuinsEntrance),
            demon_ruins_staircase: remastered.get_bonfire_state(DemonRuinsStaircase),
            demon_ruins_catacombs: remastered.get_bonfire_state(DemonRuinsCatacombs),
            lost_izalith_lava_pits: remastered.get_bonfire_state(LostIzalithLavaPits),
            lost_izalith2: remastered.get_bonfire_state(LostIzalith2),
            lost_izalith_heart_of_chaos: remastered.get_bonfire_state(LostIzalithHeartOfChaos),
            sens_fortress: remastered.get_bonfire_state(SensFortress),
            anor_londo: remastered.get_bonfire_state(AnorLondo),
            anor_londo_darkmoon_tomb: remastered.get_bonfire_state(AnorLondoDarkmoonTomb),
            anor_londo_residence: remastered.get_bonfire_state(AnorLondoResidence),
            anor_londo_chamber_of_the_princess: remastered.get_bonfire_state(AnorLondoChamberOfThePrincess),
            painted_world_of_ariamis: remastered.get_bonfire_state(PaintedWorldOfAriamis),
            dukes_archives1: remastered.get_bonfire_state(DukesArchives1),
            dukes_archives2: remastered.get_bonfire_state(DukesArchives2),
            dukes_archives3: remastered.get_bonfire_state(DukesArchives3),
            crystal_cave: remastered.get_bonfire_state(CrystalCave),
            catacombs1: remastered.get_bonfire_state(Catacombs1),
            catacombs2: remastered.get_bonfire_state(Catacombs2),
            tomb_of_the_giants_patches: remastered.get_bonfire_state(TombOfTheGiantsPatches),
            tomb_of_the_giants2: remastered.get_bonfire_state(TombOfTheGiants2),
            tomb_of_the_giants_altar_of_the_gravelord: remastered.get_bonfire_state(TombOfTheGiantsAltarOfTheGravelord),
            the_abyss: remastered.get_bonfire_state(TheAbyss),
            oolacile_sanctuary_garden: remastered.get_bonfire_state(OolacileSanctuaryGarden),
            oolacile_sanctuary: remastered.get_bonfire_state(OolacileSanctuary),
            oolacile_township: remastered.get_bonfire_state(OolacileTownship),
            oolacile_township_dungeon: remastered.get_bonfire_state(OolacileTownshipDungeon),
            chasm_of_the_abyss: remastered.get_bonfire_state(ChasmOfTheAbyss),
        };
    }
}